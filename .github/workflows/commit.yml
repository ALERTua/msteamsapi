name: Commit Checks

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  py3:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'WIP') }}
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          python3 -m pip install "poetry==2.1.1" "virtualenv==20.26.6"
          python3 -m poetry -V

      - name: Install dependencies
        run: python3 -m poetry install --with=dev

      - name: Create .env
        run: |
          echo "MSTEAMS_TEST_HOOK=${{ secrets.MSTEAMS_TEST_HOOK }}" >> ./.env
          echo "MSTEAMS_TEST_EMAIL=${{ secrets.MSTEAMS_TEST_EMAIL }}" >> ./.env
          echo "MSTEAMS_TEST_NAME=${{ secrets.MSTEAMS_TEST_NAME }}" >> ./.env

      - name: Run tests
        run: python3 -m poetry run tox -e py3

  py2:
    needs: py3  # only run py2 if py3 succeeded
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, 'WIP') }}
    strategy:
      matrix:
        python-version:
          - pypy2.7

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

        # PyYaml 5.4.1 requires cython < 3.0.0 for Python 2.7
      - name: Install dependencies
        run: |
          echo "cython<3" > /tmp/constraint.txt
          PIP_CONSTRAINT=/tmp/constraint.txt python -m pip install --no-deps -r requirements.txt
          python -m pip install pytest

      - name: Create .env
        run: |
          echo "MSTEAMS_TEST_HOOK=${{ secrets.MSTEAMS_TEST_HOOK }}" >> ./.env
          echo "MSTEAMS_TEST_EMAIL=${{ secrets.MSTEAMS_TEST_EMAIL }}" >> ./.env
          echo "MSTEAMS_TEST_NAME=${{ secrets.MSTEAMS_TEST_NAME }}" >> ./.env

      - name: Run tests
        run: python -m pytest
